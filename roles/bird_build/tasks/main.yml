- name: create build directories
  ansible.builtin.file:
    path: "{{ arouteserver_workdir }}/{{ item }}"
    state: directory
  loop:
    - cache
    - dist

- name: prepare variables
  ansible.builtin.set_fact:
    ddix_peers: []

- name: prepare clients in address families
  include_tasks: family.yml
  loop: "{{ ixp_manager_peers|sort(attribute='asn') }}"
  loop_control:
    loop_var: peer
  when: ixp_manager_portstatus[peer.status].bird

- name: build clients.yml from sql query
  ansible.builtin.template:
    src: clients.yml.j2
    dest: "{{ arouteserver_workdir }}/dist/clients.yml"

- name: run arouteserver bird
  ansible.builtin.shell: arouteserver bird --cfg arouteserver/arouteserver.yml --clients "{{ arouteserver_workdir }}/dist/clients.yml" -o "{{ arouteserver_workdir }}/dist/bird{% if build_masked %}.masked{% endif %}.conf" --cache-dir "{{ arouteserver_workdir }}/cache" --use-local-files logging
  args:
    chdir: "{{ playbook_dir }}/.."
  environment:
    PEERINGDB_API: "{{ secrets.peeringdb_api }}"
  changed_when: false

- name: run arouteserver html
  ansible.builtin.shell: arouteserver html --cfg arouteserver/arouteserver.yml --clients "{{ arouteserver_workdir }}/dist/clients.yml" -o "{{ arouteserver_workdir }}/dist/bird{% if build_masked %}.masked{% endif %}.html" --cache-dir "{{ arouteserver_workdir }}/cache"
  args:
    chdir: "{{ playbook_dir }}/.."
  environment:
    PEERINGDB_API: "{{ secrets.peeringdb_api }}"
  changed_when: false
